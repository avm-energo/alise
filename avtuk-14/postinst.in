# Enable verbose logging.
if [ "@VERBOSE_LOGGING@" = "TRUE" ]; then
    set -o xtrace
    echo "Running post script for v@CMAKE_PROJECT_VERSION@"
fi

# If we're installing the package for the first time, copy
# the service file to the service unit directory.
#
# Don't touch the service file if we're upgrading the package.
# Obviously this logic would need to be tweaked if the service
# file was changing between releases...
deb_install_prefix=@CPACK_PACKAGING_INSTALL_PREFIX@
service_name=@SERVICE_NAME@
service_name_path=@SERVICE_PATH_NAME@
# if [ $1 -eq 1 ]; then
    systemctl stop $service_name_path 2>/dev/null
    systemctl disable $service_name_path 2>/dev/null
    cp $deb_install_prefix/share/$service_name /usr/lib/systemd/system/$service_name
    cp $deb_install_prefix/share/$service_name_path /usr/lib/systemd/system/$service_name_path
    chmod 644 /usr/lib/systemd/system/$service_name
    chmod 644 /usr/lib/systemd/system/$service_name_path
    systemctl daemon-reload
# fi
systemctl start $service_name_path 2>/dev/null

# Not required, but it lets the user know the name of the
# service by printing it to the terminal. Also, if it's disabled,
# it'll return exit code 3, which gets interpreted as a failure.
#
# Suffocate any exit code that this prints - it's purely diagnostic.
systemctl status $service_name --no-pager || true
if pgrep -x alise >/dev/null
then
    systemctl enable $service_name_path
else
    echo "$service_name stopped"
fi


# Only print about the service if it was installed for the first time.
#if [ $1 -eq 1 ]; then
#    printf %"$COLUMNS"s |tr " " "-"
#    echo "$service_name was installed but wasn't started or enabled."
#    printf %"$COLUMNS"s |tr " " "-"
#fi
